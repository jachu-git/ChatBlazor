@page "/"
@rendermode InteractiveServer
@* @using Microsoft.AspNetCore.Authorization *@

@using Microsoft.AspNetCore.SignalR.Client
@* @using Microsoft.AspNetCore.Components.Authorization *@
@inject NavigationManager NavigationManager
@* @inject AuthenticationStateProvider AuthStateProvider *@
@implements IAsyncDisposable


<PageTitle>Home</PageTitle>

<div>
    <input @bind="userInput" placeholder="yr name" />
    <input @bind="messageInput" placeholder="message" />
    <button class="btn btn-primary" @onclick="SendMessage">Send</button>
</div>

<ul>
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>


@code {
    private HubConnection? hubConnection;
    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        //signalR connection conf
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/chathub")).Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            messages.Add($"{user}: {message}");
            InvokeAsync(StateHasChanged);
        });
        await hubConnection.StartAsync();
    }

    private async Task SendMessage()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}